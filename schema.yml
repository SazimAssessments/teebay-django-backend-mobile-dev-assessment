openapi: 3.0.3
info:
  title: teebay
  version: 1.0.0
  description: API Docs for Teebay BE
paths:
  /api/products/:
    get:
      operationId: api_products_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
          description: ''
    post:
      operationId: api_products_create
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
  /api/products/{id}/:
    get:
      operationId: api_products_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    put:
      operationId: api_products_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ProductRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    patch:
      operationId: api_products_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedProductRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
          description: ''
    delete:
      operationId: api_products_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this product.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/products/categories/:
    get:
      operationId: api_products_categories_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
          description: ''
  /api/transactions/purchases/:
    get:
      operationId: api_transactions_purchases_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Purchase'
          description: ''
    post:
      operationId: api_transactions_purchases_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
  /api/transactions/purchases/{id}/:
    get:
      operationId: api_transactions_purchases_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    put:
      operationId: api_transactions_purchases_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PurchaseRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    patch:
      operationId: api_transactions_purchases_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedPurchaseRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Purchase'
          description: ''
    delete:
      operationId: api_transactions_purchases_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this purchase.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/transactions/rentals/:
    get:
      operationId: api_transactions_rentals_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Rent'
          description: ''
    post:
      operationId: api_transactions_rentals_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
  /api/transactions/rentals/{id}/:
    get:
      operationId: api_transactions_rentals_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
    put:
      operationId: api_transactions_rentals_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RentRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
    patch:
      operationId: api_transactions_rentals_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedRentRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedRentRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedRentRequest'
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rent'
          description: ''
    delete:
      operationId: api_transactions_rentals_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this rent.
        required: true
      tags:
      - api
      security:
      - {}
      responses:
        '204':
          description: No response body
  /api/users/:
    get:
      operationId: api_users_list
      tags:
      - api
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /api/users/login/:
    post:
      operationId: api_users_login_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      security:
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/register/:
    post:
      operationId: api_users_register_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      security:
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
components:
  schemas:
    CategoriesEnum:
      enum:
      - electronics
      - furniture
      - home_appliances
      - sporting_goods
      - outdoor
      - toys
      type: string
      description: |-
        * `electronics` - Electronics
        * `furniture` - Furniture
        * `home_appliances` - Home Appliances
        * `sporting_goods` - Sporting Goods
        * `outdoor` - Outdoor
        * `toys` - Toys
    Category:
      type: object
      properties:
        value:
          type: string
        label:
          type: string
      required:
      - label
      - value
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
      required:
      - email
      - password
    LoginRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
        password:
          type: string
          minLength: 1
      required:
      - email
      - password
    PatchedProductRequest:
      type: object
      properties:
        seller:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesEnum'
        product_image:
          type: string
          format: binary
        purchase_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rent_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rent_option:
          $ref: '#/components/schemas/RentOptionEnum'
    PatchedPurchaseRequest:
      type: object
      properties:
        buyer:
          type: integer
        product:
          type: integer
    PatchedRentRequest:
      type: object
      properties:
        renter:
          type: integer
        product:
          type: integer
        rent_period_start_date:
          type: string
          format: date-time
        rent_period_end_date:
          type: string
          format: date-time
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        seller:
          type: integer
        title:
          type: string
          maxLength: 255
        description:
          type: string
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesEnum'
        product_image:
          type: string
          format: uri
        purchase_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rent_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rent_option:
          $ref: '#/components/schemas/RentOptionEnum'
        date_posted:
          type: string
          format: date-time
          readOnly: true
      required:
      - categories
      - date_posted
      - description
      - id
      - product_image
      - purchase_price
      - rent_option
      - rent_price
      - seller
      - title
    ProductRequest:
      type: object
      properties:
        seller:
          type: integer
        title:
          type: string
          minLength: 1
          maxLength: 255
        description:
          type: string
          minLength: 1
        categories:
          type: array
          items:
            $ref: '#/components/schemas/CategoriesEnum'
        product_image:
          type: string
          format: binary
        purchase_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rent_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
        rent_option:
          $ref: '#/components/schemas/RentOptionEnum'
      required:
      - categories
      - description
      - product_image
      - purchase_price
      - rent_option
      - rent_price
      - seller
      - title
    Purchase:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        buyer:
          type: integer
        seller:
          type: integer
          readOnly: true
        product:
          type: integer
        purchase_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - buyer
      - id
      - product
      - purchase_date
      - seller
    PurchaseRequest:
      type: object
      properties:
        buyer:
          type: integer
        product:
          type: integer
      required:
      - buyer
      - product
    Rent:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        renter:
          type: integer
        seller:
          type: integer
          readOnly: true
        product:
          type: integer
        rent_period_start_date:
          type: string
          format: date-time
        rent_period_end_date:
          type: string
          format: date-time
        total_price:
          type: string
          format: decimal
          pattern: ^-?\d{0,8}(?:\.\d{0,2})?$
          readOnly: true
          nullable: true
        rent_date:
          type: string
          format: date-time
          readOnly: true
      required:
      - id
      - product
      - rent_date
      - rent_period_end_date
      - rent_period_start_date
      - renter
      - seller
      - total_price
    RentOptionEnum:
      enum:
      - hour
      - day
      type: string
      description: |-
        * `hour` - Per Hour
        * `day` - Per Day
    RentRequest:
      type: object
      properties:
        renter:
          type: integer
        product:
          type: integer
        rent_period_start_date:
          type: string
          format: date-time
        rent_period_end_date:
          type: string
          format: date-time
      required:
      - product
      - rent_period_end_date
      - rent_period_start_date
      - renter
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 254
        first_name:
          type: string
          maxLength: 30
        last_name:
          type: string
          maxLength: 30
        address:
          type: string
          maxLength: 255
        firebase_console_manager_token:
          type: string
          maxLength: 255
        password:
          type: string
          maxLength: 128
        date_joined:
          type: string
          format: date-time
          readOnly: true
      required:
      - address
      - date_joined
      - email
      - firebase_console_manager_token
      - first_name
      - id
      - last_name
      - password
    UserRequest:
      type: object
      properties:
        email:
          type: string
          format: email
          minLength: 1
          maxLength: 254
        first_name:
          type: string
          minLength: 1
          maxLength: 30
        last_name:
          type: string
          minLength: 1
          maxLength: 30
        address:
          type: string
          minLength: 1
          maxLength: 255
        firebase_console_manager_token:
          type: string
          minLength: 1
          maxLength: 255
        password:
          type: string
          minLength: 1
          maxLength: 128
      required:
      - address
      - email
      - firebase_console_manager_token
      - first_name
      - last_name
      - password
